image: docker:stable

stages:
  - build
  - test
  - deploy


variables:
  IMAGE: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}

build:koko:
  stage: build
  services:
    - docker:dind

  variables:
    DOCKER_DRIVER: "overlay2"

  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $IMAGE:koko || true
    - docker build
         --cache-from $IMAGE:koko
         --tag $IMAGE:koko
         --file ./Dockerfile
         "."
    - docker push $IMAGE:koko

test:koko:
  stage : test
  image : $IMAGE:koko
  services:
    - postgres:koko
  variables:
      POSTGRES_DB: "users"
      POSTGRES_USER: "runner"
      POSTGRES_PASSWORD: ""
      DATABASE_TEST_URL: "postgres://runner@postgres:5432/users"
  script:
    - cd /usr/src/app
    - pip install -r requirements.txt
    - python -m pytest "app/tests" -p no:warnings
    - python -m flake8 app
    - python -m black app --check

deploy:koko:
  stage: deploy
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: "overlay2"
    HEROKU_APP_NAME : ""
    HEROKU_CONTAINER_REGISTRY: registry.heroku.com/${HEROKU_APP_NAME}/web
  script:
    - apk add --no cache curl
    - chmod +x ./release.sh
    - docker build
        --tag $HEROKU_REGISTRY_NAME
        --file ./Dockerfile.prod
        "."
    - docker login -u _ -p $HEROKU_AUTH_TOKEN registry.heroku.com
    - docker push $HEROKU_REGISTRY_NAME
    - ./release.sh